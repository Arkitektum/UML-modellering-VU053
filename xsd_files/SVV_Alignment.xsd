<?xml version="1.0" encoding="UTF-8"?><schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:lilc="http://www.opengis.net/infragml/core/1.0n" xmlns:ogc19="http://skjema.geonorge.no/OGC_ASTopic19" xmlns:svval="http://skjema.geonorge.no/svvalignment/1.0" xmlns:svvli="http://skjema.geonorge.no/svvlandinfra/1.0" elementFormDefault="qualified" targetNamespace="http://skjema.geonorge.no/svvalignment/1.0" version="0.1.2">
  <import namespace="http://skjema.geonorge.no/OGC_ASTopic19"/>
  <import namespace="http://skjema.geonorge.no/svvlandinfra/1.0" schemaLocation="https://github.com/Arkitektum/UML-modellering-VU053/blob/main/xsd_files/SVV_Landinfra.xsd"/>
  <import namespace="http://www.opengis.net/gml/3.2" schemaLocation="http://schemas.opengis.net/gml/3.2.1/gml.xsd"/>
  <import namespace="http://www.opengis.net/infragml/core/1.0n"/>
  <!--XML Schema document created by ShapeChange - http://shapechange.net/-->
  <element name="Alignment" substitutionGroup="svvli:VU053Feature" type="svval:AlignmentType">
    <annotation>
      <documentation>PositioningElement which provides a Linear Referencing System for locating PhysicalElements.
An Alignment shall be continuous, non-branching, and non-overlapping. If it is a Project Alignment, it is for a single alternative, as specified by its owning ProjectPart.</documentation>
    </annotation>
  </element>
  <complexType name="AlignmentType">
    <complexContent>
      <extension base="svvli:VU053FeatureType">
        <sequence>
          <element minOccurs="0" name="purpose" type="string"/>
          <element minOccurs="0" name="designAlternative" type="string"/>
          <element minOccurs="0" name="linestring2DRepresentation" type="gml:LineStringPropertyType"/>
          <element minOccurs="0" name="linestring3DRepresentation" type="gml:LineStringPropertyType"/>
          <element minOccurs="0" name="horizontal" type="svval:Alignment2DHorizontalPropertyType"/>
          <element minOccurs="0" name="vertical" type="svval:Alignment2DVerticalPropertyType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="AlignmentPropertyType">
    <sequence minOccurs="0">
      <element ref="svval:Alignment"/>
    </sequence>
    <attributeGroup ref="gml:AssociationAttributeGroup"/>
    <attributeGroup ref="gml:OwnershipAttributeGroup"/>
  </complexType>
  <element name="Alignment2DHorSegment" substitutionGroup="gml:AbstractObject" type="svval:Alignment2DHorSegmentType">
    <annotation>
      <documentation>part of a horizontal alignment having a single geometric representation (either line, circular curve, clothoid, or other spiral)</documentation>
    </annotation>
  </element>
  <complexType name="Alignment2DHorSegmentType">
    <sequence>
      <element name="tangentialContinuity" type="boolean"/>
      <element name="geometry" type="svval:CurveSegment2DHorizontalPropertyType">
        <annotation>
          <documentation>the geometry of the segment (line, circular curve, clothoid, or other spiral)</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <complexType name="Alignment2DHorSegmentPropertyType">
    <sequence>
      <element ref="svval:Alignment2DHorSegment"/>
    </sequence>
  </complexType>
  <element name="Alignment2DHorizontal" substitutionGroup="gml:AbstractObject" type="svval:Alignment2DHorizontalType">
    <annotation>
      <documentation>2D representation of the alignment geometry in the x-y plane</documentation>
    </annotation>
  </element>
  <complexType name="Alignment2DHorizontalType">
    <sequence>
      <element name="location" type="string">
        <annotation>
          <documentation>e.g., "road centerline"</documentation>
        </annotation>
      </element>
      <element name="description" type="string">
        <annotation>
          <documentation>describes where the alignment is located with respect to the owning road or rail segment, such as "roadway centerline"</documentation>
        </annotation>
      </element>
      <element name="state" type="svval:StateType"/>
      <element minOccurs="0" name="linestring2DRepresentation" type="gml:LineStringPropertyType"/>
      <element minOccurs="0" name="startDistanceAlong" type="gml:LengthType">
        <annotation>
          <documentation>If LRM is of type "absolute", then the measured value at the start of the horizontal alignment if other than 0</documentation>
        </annotation>
      </element>
      <element minOccurs="0" name="crs" type="gml:CRSPropertyType">
        <annotation>
          <documentation>if defined by segments, the Cartesian engineering reference system</documentation>
        </annotation>
      </element>
      <element maxOccurs="unbounded" minOccurs="0" name="segment" type="svval:Alignment2DHorSegmentPropertyType"/>
    </sequence>
  </complexType>
  <complexType name="Alignment2DHorizontalPropertyType">
    <sequence>
      <element ref="svval:Alignment2DHorizontal"/>
    </sequence>
  </complexType>
  <element name="Alignment2DVertSegment" substitutionGroup="gml:AbstractObject" type="svval:Alignment2DVertSegmentType"/>
  <complexType name="Alignment2DVertSegmentType">
    <sequence>
      <element name="tangentialContinuity" type="boolean"/>
      <element name="geometry" type="svval:CurveSegment2DVertPropertyType"/>
    </sequence>
  </complexType>
  <complexType name="Alignment2DVertSegmentPropertyType">
    <sequence>
      <element ref="svval:Alignment2DVertSegment"/>
    </sequence>
  </complexType>
  <element name="Alignment2DVertical" substitutionGroup="gml:AbstractObject" type="svval:Alignment2DVerticalType">
    <annotation>
      <documentation>long section profile along a line at or offset from a horizontal alignment.
2D coordinate axes are alignment distanceAlong and ground elevation.
State distinguishes between existing ground surface vs. proposed design profile.</documentation>
    </annotation>
  </element>
  <complexType name="Alignment2DVerticalType">
    <sequence>
      <element name="location" type="string">
        <annotation>
          <documentation>e.g., "edge of pavement"</documentation>
        </annotation>
      </element>
      <element name="description" type="string"/>
      <element name="state" type="svval:StateType"/>
      <element minOccurs="0" name="alignmentOffset" type="gml:LengthType"/>
      <element maxOccurs="unbounded" name="segments" type="svval:Alignment2DVertSegmentPropertyType"/>
      <element name="measuredAlong" type="svval:Alignment2DHorizontalPropertyType"/>
    </sequence>
  </complexType>
  <complexType name="Alignment2DVerticalPropertyType">
    <sequence>
      <element ref="svval:Alignment2DVertical"/>
    </sequence>
  </complexType>
  <element name="AlignmentSet" substitutionGroup="svvli:VU053Set" type="svval:AlignmentSetType"/>
  <complexType name="AlignmentSetType">
    <complexContent>
      <extension base="svvli:VU053SetType">
        <sequence>
          <element maxOccurs="unbounded" name="alignment">
            <complexType>
              <complexContent>
                <extension base="gml:AbstractFeatureMemberType">
                  <sequence minOccurs="0">
                    <element ref="svval:Alignment"/>
                  </sequence>
                  <attributeGroup ref="gml:AssociationAttributeGroup"/>
                </extension>
              </complexContent>
            </complexType>
          </element>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="AlignmentSetPropertyType">
    <sequence minOccurs="0">
      <element ref="svval:AlignmentSet"/>
    </sequence>
    <attributeGroup ref="gml:AssociationAttributeGroup"/>
    <attributeGroup ref="gml:OwnershipAttributeGroup"/>
  </complexType>
  <element name="CurveSegment2DHorizontal" substitutionGroup="gml:AbstractObject" type="svval:CurveSegment2DHorizontalType"/>
  <complexType name="CurveSegment2DHorizontalType">
    <choice>
      <element name="lineSegment" type="gml:LineStringPropertyType"/>
      <element name="circularArcSegment" type="gml:ArcStringPropertyType"/>
      <element name="clothoidArcSegment" type="gml:ClothoidPropertyType"/>
    </choice>
  </complexType>
  <complexType name="CurveSegment2DHorizontalPropertyType">
    <sequence>
      <element ref="svval:CurveSegment2DHorizontal"/>
    </sequence>
  </complexType>
  <element name="CurveSegment2DVert" substitutionGroup="gml:AbstractObject" type="svval:CurveSegment2DVertType"/>
  <complexType name="CurveSegment2DVertType">
    <sequence>
      <element name="startDistAlong">
        <complexType>
          <complexContent>
            <extension base="gml:AbstractMemberType">
              <sequence minOccurs="0">
                <element ref="svvli:DistanceExpression"/>
              </sequence>
              <attributeGroup ref="gml:AssociationAttributeGroup"/>
            </extension>
          </complexContent>
        </complexType>
      </element>
      <element name="startHeight" type="gml:LengthType"/>
      <element name="startGradient">
        <complexType>
          <complexContent>
            <extension base="gml:AbstractMemberType">
              <sequence minOccurs="0">
                <element ref="svvli:Percentage"/>
              </sequence>
              <attributeGroup ref="gml:AssociationAttributeGroup"/>
            </extension>
          </complexContent>
        </complexType>
      </element>
      <element name="horizontalLength" type="gml:LengthType"/>
    </sequence>
  </complexType>
  <complexType name="CurveSegment2DVertPropertyType">
    <sequence>
      <element ref="svval:CurveSegment2DVert"/>
    </sequence>
  </complexType>
  <simpleType name="StateType">
    <union memberTypes="svval:StateEnumerationType svval:StateOtherType"/>
  </simpleType>
  <simpleType name="StateEnumerationType">
    <restriction base="string">
      <enumeration value="existing"/>
      <enumeration value="proposed"/>
    </restriction>
  </simpleType>
  <simpleType name="StateOtherType">
    <restriction base="string">
      <pattern value="other: \w{2,}"/>
    </restriction>
  </simpleType>
  <element name="VertSegmentCircularArc" substitutionGroup="svval:CurveSegment2DVert" type="svval:VertSegmentCircularArcType"/>
  <complexType name="VertSegmentCircularArcType">
    <complexContent>
      <extension base="svval:CurveSegment2DVertType">
        <sequence>
          <element name="radius" type="gml:LengthType"/>
          <element name="isConvex" type="boolean">
            <annotation>
              <documentation>A value of ”true” (convex) means that the gradient at the beginning of the segment is less than the gradient at the end of the previous segment.  A value of “false” (concave) (Boolean=”false”) means that the gradient at the beginning of the segment is greater than the gradient at the end of the previous segment.</documentation>
            </annotation>
          </element>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="VertSegmentCircularArcPropertyType">
    <sequence>
      <element ref="svval:VertSegmentCircularArc"/>
    </sequence>
  </complexType>
  <element name="VertSegmentLine" substitutionGroup="svval:CurveSegment2DVert" type="svval:VertSegmentLineType"/>
  <complexType name="VertSegmentLineType">
    <complexContent>
      <extension base="svval:CurveSegment2DVertType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="VertSegmentLinePropertyType">
    <sequence>
      <element ref="svval:VertSegmentLine"/>
    </sequence>
  </complexType>
  <element name="VertSegmentParabolicArc" substitutionGroup="svval:CurveSegment2DVert" type="svval:VertSegmentParabolicArcType"/>
  <complexType name="VertSegmentParabolicArcType">
    <complexContent>
      <extension base="svval:CurveSegment2DVertType">
        <sequence>
          <element name="constant" type="double">
            <annotation>
              <documentation>parabola constant (determining the “steepness” of the parabola = K * 100</documentation>
            </annotation>
          </element>
          <element name="isConvex" type="boolean">
            <annotation>
              <documentation>A value of ”true” (convex) means that the gradient at the beginning of the segment is less than the gradient at the end of the previous segment.  A value of “false” (concave) (Boolean=”false”) means that the gradient at the beginning of the segment is greater than the gradient at the end of the previous segment.</documentation>
            </annotation>
          </element>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="VertSegmentParabolicArcPropertyType">
    <sequence>
      <element ref="svval:VertSegmentParabolicArc"/>
    </sequence>
  </complexType>
</schema>
